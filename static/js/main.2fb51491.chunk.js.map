{"version":3,"sources":["axiosInstance.js","store/action.js","components/Orders.js","App.js","store/reducer.js","index.js"],"names":["axiosInstance","axios","create","baseURL","GET_FOOD_START","GET_FOOD_SUCCESS","NEWORDER","REMOVE","Orders","useState","modal","setModal","orders","useSelector","state","dispatch","useDispatch","bill","i","length","stoimost","remove","index","type","removeEl","className","map","el","name","count","Button","onClick","color","isOpen","element","stoimost1","App","food","order","dish","getOrder","useEffect","a","get","responce","data","src","image","alt","Modal","setAppElement","initialState","reducer","action","Object","keys","key","id","check","splice","delet","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fb51491.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://tasks-2caf3.firebaseio.com/',\n});\n\nexport default axiosInstance;","import axiosInstance from '../axiosInstance';\n\nexport const GET_FOOD_START = 'GET_FOOD_START';\nexport const GET_FOOD_SUCCESS = 'GET_FOOD_SUCCESS';\n\nexport const NEWORDER = 'NEWORDER';\n\nexport const REMOVE = 'REMOVE';\n\nexport const removeEl = (index) =>{\n    return {type: REMOVE, index};\n}\n\nexport const getOrder = (dish) =>{\n    return{type:NEWORDER, dish}\n}\n\nexport const getfoodstart = () =>({type:GET_FOOD_START})\nexport const getfoodsuccess = (food) =>({type:GET_FOOD_SUCCESS, food})\n\nexport const getFood = () =>{\n    return async dispatch =>{\n        dispatch(getfoodstart());\n        const responce = await axiosInstance.get('/foods.json');\n        dispatch(getfoodsuccess(responce.data));\n    }\n}","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Button} from 'reactstrap'\nimport Modal from 'react-modal'\n\nimport {removeEl} from '../store/action'\n\n\nModal.setAppElement('#root');\nexport default function Orders() {\n    const [modal, setModal] = useState(false);\n    const orders = useSelector(state => state.orders);\n    const dispatch = useDispatch();\n    let bill = 0;\n    for(let i = 0; i < orders.length; i++){\n        bill += orders[i].stoimost;\n    }\n\n    const remove = (index) =>{dispatch(removeEl(index))}\n\n    const place = () =>(setModal(true))\n    \n\n    if(orders.length !== 0){\n        return (\n            <div className=\"order border\">\n                <div className=\"bordered\">\n                {\n                    orders.map((el, index) =>{\n                        return <div className=\"orderedDish\" key={index}>\n                            <span className=\"name\">{el.name}  &times;  {el.count}</span>\n                            <span>{el.stoimost}</span>\n                            <Button onClick={() => remove(index)} color=\"danger\">&times;</Button>\n                        </div>\n                    })\n                }\n                </div>\n                <h3>\n                    Доставка по городу 200 сом\n                </h3>\n                <div >\n                    <div className=\"bill\"><span>Общий счет:</span> <span className=\"number\">{bill + 200}</span></div>\n                    <Button onClick={place} className=\"classs\" color=\"success\">Заказать</Button>\n                </div>\n\n                <div className=\"Modal\">\n                    <Modal isOpen = {modal} >\n                        <div>\n                        <h1>Заказ</h1>\n                        <div>\n                            {\n                                 orders.map((element) =>{\n                                    return (\n                                    <div key={element.stoimost1}>\n                                         <span >{element.name} <span>{element.count}</span></span>\n                                    </div>\n                                     )\n                                })\n                            }\n                        </div>\n                        <div className=\"f-d\">\n                          <Button color=\"primary\">Заказать!!!</Button>\n                          <Button className=\"m-5\" color=\"danger\" onClick={() => setModal(false)}>Отмена</Button>\n                        </div>\n                        </div>\n                    </Modal>\n                </div>  \n            </div> \n        )\n    }else{\n        return(\n            <div className=\"start\">\n                <span className=\"sponge\">Закажите что нибудь)))</span>\n            </div>\n        )\n    }\n}\n","import React, { useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {getFood, getOrder} from './store/action';\nimport './App.css'\nimport Orders from './components/Orders';\n\nexport default function App() {\n  const food = useSelector(state => state.food);\n  const dispatch = useDispatch();\n  const order = (dish) =>{dispatch(getOrder(dish))}\n\nuseEffect(() =>{\n  dispatch(getFood());\n}, [dispatch]);\n\n  return (\n    <div className= \"djanbolotov\">\n      <header>\n          Добро пожаловать на сайт djanbolotov16!!!\n      </header>\n      <div className=\"container1\">\n          <div className=\"menu\">\n            {\n              food.map((dish, index) =>{\n                return <div onClick={() => order(dish)} className=\"menu_item\" key={index}>\n                  <h1>{dish.name}</h1>\n                  <div className=\"image\"><img src= {dish.image} alt=\"#\"/></div>\n                  <p>{dish.stoimost} сом</p>\n                </div>\n              })\n            }\n          </div>\n          <div>\n            <Orders/>\n          </div>\n      </div>\n    </div>\n  )\n}\n","import {GET_FOOD_START, GET_FOOD_SUCCESS, NEWORDER, REMOVE} from './action';\n\nconst initialState = {\n    food:[],\n    orders: [],\n};\n\n\nconst reducer = (state = initialState, action ) =>{\n    switch (action.type){\n        case GET_FOOD_START:\n            return {...state};\n        case GET_FOOD_SUCCESS:\n            let food = Object.keys(action.food).map(key => {\n                return {\n                  ...action.food[key],\n                  id: key,\n                }\n              });\n            return {...state, food:food};\n\n        case NEWORDER: \n            let orders = [...state.orders]\n            let check = true;\n            for(let i = 0; i < state.orders.length; i++){\n                if(action.dish.name === state.orders[i].name){\n                    orders[i].count += 1;\n                    orders[i].stoimost += orders[i].stoimost1;\n                    check = false;\n                }\n             }\n             if(check === true){\n                return{...state, orders:[...state.orders, action.dish]}\n             }else{\n                return{...state, orders:orders}\n             }\n\n        case REMOVE:\n            let i = action.index\n            if(state.orders[i].count === 1){\n                let remove = state.orders.splice(i, 1);\n                remove = [...state.orders]\n                return{ ...state, orders: remove }\n            }else{\n                state.orders[i].stoimost -= state.orders[i].stoimost1;\n                let delet = state.orders[i];\n                delet.count -= 1;\n                return {...state, orders:[...state.orders]}\n            }\n            \n            default:\n                return state;\n    }\n\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App/>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}